events {}

http {
    upstream backend {
        server myroslavserveruk.com;
        server myroslavserverus1.com;
        server myroslavserverus2.com backup;
        server myroslavserver.com;
    }

    server {
        listen 80;
        server_name example.com;

        location / {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /healthcheck {
            access_log off;

            content_by_lua_block {
                local http = require "resty.http"
                local httpc = http.new()

                local function perform_health_check()
                    local res, err = httpc:request_uri("http://localhost/health", {
                        method = "GET"
                    })

                    if not res or res.status ~= 200 then
                        ngx.status = 503
                        ngx.say("Service Unavailable")
                    else
                        ngx.status = 200
                        ngx.say("OK")
                    end

                    ngx.exit(ngx.status)
                end

                -- Schedule the health check function to run every 5 seconds
                local delay = 5  -- in seconds
                local ok, err = ngx.timer.every(delay, perform_health_check)
                if not ok then
                    ngx.log(ngx.ERR, "failed to create timer: ", err)
                    return ngx.exit(500)
                end
            }
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}

